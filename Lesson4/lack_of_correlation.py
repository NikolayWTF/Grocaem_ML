# В предыдущем примере НС искала корреляцию, между входными и истинными значениями
# И такая связь была найдена. Если второй сигнал горит, значит идти можно, а первый и третий
# сигналы не влияют на то можно идти или нельзя, поэтому для второго входа вес был равен 1,
# в то время, как для 1 и 3 - был равен нулю.
# Но что будет если нет явной корреляции между входными истинными значениями

# Задача. Вы попали в другой город и увидели незнакомый светофор. Нужно понять при какой
# комбинации сигналов можно переходить дорогу.
# В один момент может гореть несколько сигналов, всего на светофоре 3 сигнала
import numpy as np

streetlights = np.array([[1, 0, 1],  # Уберу последние 2 строчки из набора входных данных
                         [0, 1, 1],
                         [0, 0, 1],
                         [1, 1, 1]])
walk_vs_stop = np.array([1, 1, 0, 0])  # Заметим, что теперь ответ не зависит от того горит ли какой-то сигнал
# Светофор стал сложнее

weights = np.array([1.0, 1.0, 1.0])
alpha = 0.1

error = 0

for iteration in range(400):
    error_for_all_lights = 0
    for row_index in range(len(walk_vs_stop)):
        inp = streetlights[row_index]
        goal_prediction = walk_vs_stop[row_index]

        prediction = inp.dot(weights)

        error = (prediction - goal_prediction) ** 2
        delta = prediction - goal_prediction
        weights_delta = inp * delta
        weights -= alpha * weights_delta

        print("Prediction: " + str(prediction))
    print("Error: " + str(error) + "\n")

# Я увеличил количество итераций в 10 раз (с 40 до 400), чтобы продемонстрировать, что ошибка уменьшается
# Только до определённого момента, после чего её изменение становится слишком незначительным, как и изменение
# весов. Явной корреляции не обнаружено и на некоторых примерах наша НС, будет ошибаться.
# Такое явление называется конфликт давлений
